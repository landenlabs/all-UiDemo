apply plugin: 'com.android.application'

// String outputDirFramework = file('../dist').getPath();

android {
    signingConfigs {
        release
    }
    compileSdkVersion 29

    defaultConfig {
        applicationId 'com.landenlabs.all_uidemo'
        minSdkVersion 21
        targetSdkVersion 29
        versionName '3.02.10'
        versionCode 30210

        // renderscriptTargetApi 23
        // renderscriptSupportModeEnabled true

        signingConfig signingConfigs.release

        // Unit test
        // http://robolectric.org/migrating/#migrating-to-40
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    // Save app version in string so resource can be used in layouts
    applicationVariants.all { variant ->
        variant.resValue "string", "versionName", "version " + variant.versionName
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            renderscriptDebuggable true
        }
    }

    lintOptions {
        abortOnError false
        disable 'DefaultLocale', 'SimpleDateFormat', 'InflateParams', 'SpUsage',
                'UseCompoundDrawables', 'HandlerLeak', 'ViewConstructor', 'SetTextI18n',
                'RtlSymmetry', 'RtlHardcoded', 'ContentDescription',
                'MissingTranslation', 'ValidFragment', 'UnusedAttribute',
                'FieldCanBeLocal', 'LocalSuppress', 'HardcodedText', 'Typos'
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            // Enable verbose lint reporting during build.
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }

    productFlavors {
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    sourceSets {
        main {
            renderscript.srcDirs = ['src']
        }
    }

    // Load signing config (does not work for command line builds)
    if (file("release.properties").exists()) {
        def props = new Properties()
        props.load(new FileInputStream(rootProject.file("release.properties")))
        android.signingConfigs.release.storeFile rootProject.file(props.keyStore)
        android.signingConfigs.release.storePassword props.keyStorePassword
        android.signingConfigs.release.keyAlias props.keyAlias
        android.signingConfigs.release.keyPassword props.keyAliasPassword
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    // https://developer.android.com/topic/libraries/support-library/revisions
    // Last non-AndroidX version is 28.9.9
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.media:media:1.1.0'
    implementation 'androidx.percentlayout:percentlayout:1.0.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "androidx.viewpager:viewpager:1.0.0"
    implementation 'androidx.drawerlayout:drawerlayout:1.0.0'

    // https://developers.google.com/android/guides/releases
    // Version 17.0.0 forces use of AndroidX
    // implementation 'com.google.android.gms:play-services-analytics:17.0.0'
    implementation 'com.google.android.gms:play-services-analytics:17.0.0'
    implementation 'net.hockeyapp.android:HockeySDK:5.1.1'


    // Unit testing
    testImplementation 'junit:junit:4.12'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation "org.assertj:assertj-core:3.8.0"
    testImplementation 'org.robolectric:robolectric:4.3'
}

// Rename app
android.applicationVariants.all { variant ->
    variant.outputs.all {
        def ourname = project.parent.name
        outputFileName = "$ourname-${variant.name}-${variant.versionName}.apk"
        println "out name= $outputFileName"
    }
}